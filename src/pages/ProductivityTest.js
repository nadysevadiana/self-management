import React, { useState } from "react";
import { motion } from "framer-motion";
import { Link } from "react-router-dom";
import "../App.css";
import "./Test.css";

const ProductivityTest = () => {
  const sections = {
    "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è": [
      "–£ –º–µ–Ω—è –µ—Å—Ç—å —á–µ—Ç–∫–∏–π —Ä–∞—Å–ø–æ—Ä—è–¥–æ–∫ –¥–Ω—è, –∫–æ—Ç–æ—Ä–æ–º—É —è —Å—Ç–∞—Ä–∞—é—Å—å —Å–ª–µ–¥–æ–≤–∞—Ç—å.",
      "–Ø –ø–ª–∞–Ω–∏—Ä—É—é —Å–≤–æ–π –¥–µ–Ω—å –∑–∞—Ä–∞–Ω–µ–µ (–≤–µ—á–µ—Ä–æ–º –∏–ª–∏ —É—Ç—Ä–æ–º).",
      "–£ –º–µ–Ω—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ª, –∫–æ—Ç–æ—Ä—ã–º —è –ø–æ–ª—å–∑—É—é—Å—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ.",
      "–Ø —É–º–µ—é –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –≤ –∑–∞–¥–∞—á–∞—Ö.",
      "–Ø –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—é –≤–∞–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –ø–æ—Ç–æ–º."
    ],
    "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º": [
      "–Ø –∏—Å–ø–æ–ª—å–∑—É—é —Ç–µ—Ö–Ω–∏–∫–∏ —Ç–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ (–º–∞—Ç—Ä–∏—Ü–∞ –≠–π–∑–µ–Ω—Ö–∞—É—ç—Ä–∞, Pomodoro –∏ —Ç. –¥.).",
      "–Ø –º–æ–≥—É —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–µ, –Ω–µ –æ—Ç–≤–ª–µ–∫–∞—è—Å—å.",
      "–Ø –º–∏–Ω–∏–º–∏–∑–∏—Ä—É—é –≤–ª–∏—è–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –∏ –¥—Ä—É–≥–∏—Ö –æ—Ç–≤–ª–µ–∫–∞—é—â–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤.",
      "–Ø —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é —Å–≤–æ–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫.",
      "–Ø —É–º–µ—é –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –∏–∑–±–µ–≥–∞—Ç—å –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏."
    ],
    "–°–∞–º–æ–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è": [
      "–Ø —É–º–µ—é –∑–∞—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±—è —Ä–∞–±–æ—Ç–∞—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—Ç—Å—è.",
      "–Ø –Ω–µ –ø–æ–¥–¥–∞—é—Å—å –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏–∏ –∏ –∑–Ω–∞—é, –∫–∞–∫ —Å –Ω–µ–π –±–æ—Ä–æ—Ç—å—Å—è.",
      "–£ –º–µ–Ω—è –µ—Å—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ü–µ–ª–∏, –∏ —è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∫ –Ω–∏–º –∏–¥—É.",
      "–Ø –Ω–µ –∏—Å–ø—ã—Ç—ã–≤–∞—é —Å—Ç—Ä–µ—Å—Å–∞ –∏–∑-–∑–∞ –Ω–µ—Å–¥–µ–ª–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á, —Ç–∞–∫ –∫–∞–∫ —É –º–µ–Ω—è –µ—Å—Ç—å —á–µ—Ç–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç—ã.",
      "–Ø —É–º–µ—é –¥–µ—Ä–∂–∞—Ç—å —Å–µ–±—è –≤ —Ç–æ–Ω—É—Å–µ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é."
    ],
    "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–µ–π": [
      "–Ø —Å–ª–µ–∂—É –∑–∞ —Å–≤–æ–∏–º —É—Ä–æ–≤–Ω–µ–º —ç–Ω–µ—Ä–≥–∏–∏ –∏ –∑–Ω–∞—é, –∫–æ–≥–¥–∞ –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤—ã.",
      "–Ø –ø—Ä–∞–∫—Ç–∏–∫—É—é –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ—Ä—ã–≤—ã, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ª–∏—Å—Ç–∞—é —Å–æ—Ü—Å–µ—Ç–∏.",
      "–Ø —É–¥–µ–ª—è—é –≤–Ω–∏–º–∞–Ω–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø–∏—Ç–∞–Ω–∏—é –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.",
      "–Ø –∏—Å–ø–æ–ª—å–∑—É—é –≤–µ—á–µ—Ä–Ω–∏–π —Ä–∏—Ç—É–∞–ª –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è.",
      "–Ø —Ö–æ—Ä–æ—à–æ –≤—ã—Å—ã–ø–∞—é—Å—å –∏ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –æ—Ç–¥–æ—Ö–Ω—É–≤—à–∏–º."
    ]
  };

  const totalQuestions = Object.values(sections).flat().length;

  const [answers, setAnswers] = useState(() => {
    const saved = localStorage.getItem("productivityAnswers");
    return saved ? JSON.parse(saved) : {};
  });

  const [result, setResult] = useState(() => localStorage.getItem("productivityResult") || null);
  const [showError, setShowError] = useState(false);

  const handleAnswerChange = (questionIndex, value) => {
    const updatedAnswers = { ...answers, [questionIndex]: value };
    setAnswers(updatedAnswers);
    setResult(null);
    setShowError(false);
    localStorage.setItem("productivityAnswers", JSON.stringify(updatedAnswers));
  };

  const calculateScore = () => {
    if (Object.keys(answers).length < totalQuestions) {
      setShowError(true);
      return;
    }

    const score = Object.values(answers).reduce((acc, val) => acc + parseInt(val), 0);
    let resultText =
      score >= 80
        ? "üöÄ –í—ã –æ—Ç–ª–∏—á–Ω–æ —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–≤–æ–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é!"
        : score >= 60
        ? "‚úÖ –•–æ—Ä–æ—à–∏–π —É—Ä–æ–≤–µ–Ω—å, –Ω–æ –µ—Å—Ç—å –æ–±–ª–∞—Å—Ç–∏, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è."
        : score >= 40
        ? "‚ö†Ô∏è –í–∞—à —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞–≤–ª—è–µ—Ç –∂–µ–ª–∞—Ç—å –ª—É—á—à–µ–≥–æ."
        : "‚è≥ –í–∞—à–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –Ω–∏–∑–∫–æ–º —É—Ä–æ–≤–Ω–µ. –ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ.";

    const finalResult = `–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${score} –±–∞–ª–ª–æ–≤. ${resultText}`;
    setResult(finalResult);
    localStorage.setItem("productivityResult", finalResult);
  };

  const copyResultToClipboard = () => {
    if (result) {
      navigator.clipboard.writeText(result);
      alert("–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!");
    }
  };

  return (
    <motion.div className="test-page" initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.5 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="test-header-card">
        <Link to="/tests" className="back-button">‚Üê –ù–∞–∑–∞–¥</Link>
        <h2 className="test-title">üìä –¢–µ—Å—Ç: –û—Ü–µ–Ω–∫–∞ —É—Ä–æ–≤–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h2>
        <p className="test-subtitle">–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –≤—ã–±–∏—Ä–∞—è —Å—Ç–µ–ø–µ–Ω—å —Å–æ–≥–ª–∞—Å–∏—è –æ—Ç 1 –¥–æ 5.</p>
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div className="progress-bar">
        <div
          className="progress-fill"
          style={{ width: `${(Object.keys(answers).length / totalQuestions) * 100}%` }}
        ></div>
      </div>

      {showError && <p className="error-message">‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã.</p>}

      {/* –í–æ–ø—Ä–æ—Å—ã */}
      <div className="test-grid-layout">
        {Object.entries(sections).map(([sectionTitle, questions], sectionIndex) => (
          <div key={sectionIndex} className="test-section">
            <h3 className="section-heading">{sectionTitle}</h3>

            {questions.map((question, questionIndex) => {
              const globalIndex =
                Object.values(sections)
                  .slice(0, sectionIndex)
                  .flat().length + questionIndex;

              return (
                <div key={globalIndex} className="question-box">
                  <p className="question-text">{globalIndex + 1}. {question}</p>

                  <div className="scale-options">
                    {[
                      { value: 1, label: "–°–æ–≤—Å–µ–º –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω" },
                      { value: 2, label: "–°–∫–æ—Ä–µ–µ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω" },
                      { value: 3, label: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ" },
                      { value: 4, label: "–°–∫–æ—Ä–µ–µ —Å–æ–≥–ª–∞—Å–µ–Ω" },
                      { value: 5, label: "–ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω" }
                    ].map(({ value, label }) => (
                      <label
                        key={value}
                        className={`scale-label full ${answers[globalIndex]=== value ? "selected" : ""}`}
                      >
                        <input
                          type="radio"
                          name={`q${globalIndex}`}
                          value={value}
                          onChange={() => handleAnswerChange(globalIndex, value)}
                        />
                        <span className="label">{label}</span>
                      </label>
                    ))}
                  </div>
                </div>
              );
            })}
          </div>
        ))}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ */}
      <div className="submit-container">
        <motion.button
          type="button"
          className="primary-button"
          onClick={calculateScore}
          whileHover={{ scale: 1.05 }}
        >
          üìä –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        </motion.button>
      </div>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
      {result && (
        <motion.div
          className="result-card"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <h3 className="result-text">{result}</h3>
          <button onClick={copyResultToClipboard} className="copy-result-button">
            üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          </button>
        </motion.div>
      )}
    </motion.div>
  );
};

export default ProductivityTest;
